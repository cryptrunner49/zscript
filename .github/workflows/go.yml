name: Go

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.7'

      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y libffi-dev libreadline-dev gcc pkg-config cmake make

      - name: Build VM
        run: go build -o bin/zvm cmd/vm/vm.go

      - name: Build Lib (shared object and header)
        run: go build -buildmode=c-shared -o bin/libzscript.so cmd/lib/corelib.go

      - name: Test
        run: go test -v ./...

      - name: Upload Build Artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: zscript-release
          path: |
            bin/zvm
            bin/libzscript.so
            bin/libzscript.h

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: zscript-release
          path: .

      - name: Get Ubuntu Version
        id: get_ubuntu_version
        run: |
          UBUNTU_VERSION=$(lsb_release -r -s)
          echo "UBUNTU_VERSION=${UBUNTU_VERSION}" >> $GITHUB_ENV

      - name: Create Release
        run: |
          gh release create "${{ github.ref_name }}" --title "${{ github.ref_name }}" --notes "Release ${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Checksums
        run: |
          sha256sum zvm > SHA256-SUMS.txt
          sha512sum zvm > SHA512-SUMS.txt
          sha256sum libzscript.so >> SHA256-SUMS.txt
          sha512sum libzscript.so >> SHA512-SUMS.txt

      - name: Create ZIP Archive
        run: zip zscript-release.zip zvm libzscript.so libzscript.h SHA256-SUMS.txt SHA512-SUMS.txt

      - name: Upload Artifacts
        run: |
          gh release upload "${{ github.ref_name }}" zvm libzscript.so libzscript.h zscript-release.zip --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Asset Labels
        run: |
          repo="${GITHUB_REPOSITORY}"
          id_zvm=$(gh api repos/$repo/releases/tags/${{ github.ref_name }} --jq '.assets[] | select(.name=="zvm") | .id')
          id_lib=$(gh api repos/$repo/releases/tags/${{ github.ref_name }} --jq '.assets[] | select(.name=="libzscript.so") | .id')
          id_header=$(gh api repos/$repo/releases/tags/${{ github.ref_name }} --jq '.assets[] | select(.name=="libzscript.h") | .id')
          id_zip=$(gh api repos/$repo/releases/tags/${{ github.ref_name }} --jq '.assets[] | select(.name=="zscript-release.zip") | .id')
          gh api repos/$repo/releases/assets/$id_zvm --method PATCH --field label="ZScript VM ${{ github.ref_name }} Ubuntu $UBUNTU_VERSION x64"
          gh api repos/$repo/releases/assets/$id_lib --method PATCH --field label="libzscript.so ${{ github.ref_name }} Ubuntu $UBUNTU_VERSION x64"
          gh api repos/$repo/releases/assets/$id_header --method PATCH --field label="libzscript.h ${{ github.ref_name }}"
          gh api repos/$repo/releases/assets/$id_zip --method PATCH --field label="ZScript Bundle ${{ github.ref_name }} Ubuntu $UBUNTU_VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Checksum Files
        run: |
          gh release upload "${{ github.ref_name }}" SHA256-SUMS.txt SHA512-SUMS.txt --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
