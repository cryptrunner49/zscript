name: Go

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write  # Grants permission to create releases

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.7'

      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y libffi-dev libreadline-dev gcc pkg-config cmake make
        
      - name: Build
        run: go build -o bin/spyvm cmd/main.go

      - name: Upload Build Artifact
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: spyvm
          path: bin/spyvm

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: spyvm
          path: .

      - name: Get Ubuntu Version
        id: get_ubuntu_version
        run: |
          UBUNTU_VERSION=$(lsb_release -r -s)
          echo "UBUNTU_VERSION=${UBUNTU_VERSION}" >> $GITHUB_ENV
          echo "Ubuntu version is ${UBUNTU_VERSION}"

      - name: Create Release
        run: |
          gh release create "${{ github.ref_name }}" --title "${{ github.ref_name }}" --notes "Release ${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Checksums for spyvm
        run: |
          sha256sum spyvm | awk '{print $1}' > SHA256-SUMS.txt
          sha512sum spyvm | awk '{print $1}' > SHA512-SUMS.txt

      - name: Upload Seed VM Artifact
        run: |
          gh release upload "${{ github.ref_name }}" spyvm --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update release asset label for spyvm
        run: |
          # Get the repository in "owner/repo" format
          repo="${GITHUB_REPOSITORY}"
          # Retrieve the asset ID for the 'spyvm' file from the release by filtering on the asset name
          asset_id=$(gh api repos/$repo/releases/tags/${{ github.ref_name }} --jq '.assets[] | select(.name=="spyvm") | .id')
          echo "Updating asset id $asset_id with custom label"
          # Update the asset's label using the GitHub REST API via gh api
          gh api repos/$repo/releases/assets/$asset_id --method PATCH --field label="SPYScript VM ${{ github.ref_name }} Ubuntu $UBUNTU_VERSION x64"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Checksum Files
        run: |
          gh release upload "${{ github.ref_name }}" SHA256-SUMS.txt SHA512-SUMS.txt --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
